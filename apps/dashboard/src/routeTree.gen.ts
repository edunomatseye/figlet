/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProjectRouteImport } from './routes/project'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PostsPostIdRouteImport } from './routes/posts.$postId'
import { Route as PostsChar123CategoryIdChar125Char123SlugIdChar125RouteImport } from './routes/posts.{-$categoryId}.{-$slugId}'

const ProjectRoute = ProjectRouteImport.update({
  id: '/project',
  path: '/project',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsPostIdRoute = PostsPostIdRouteImport.update({
  id: '/posts/$postId',
  path: '/posts/$postId',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsChar123CategoryIdChar125Char123SlugIdChar125Route =
  PostsChar123CategoryIdChar125Char123SlugIdChar125RouteImport.update({
    id: '/posts/{-$categoryId}/{-$slugId}',
    path: '/posts/{-$categoryId}/{-$slugId}',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/project': typeof ProjectRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/posts/{-$categoryId}/{-$slugId}': typeof PostsChar123CategoryIdChar125Char123SlugIdChar125Route
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/project': typeof ProjectRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/posts/{-$categoryId}/{-$slugId}': typeof PostsChar123CategoryIdChar125Char123SlugIdChar125Route
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/project': typeof ProjectRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/posts/{-$categoryId}/{-$slugId}': typeof PostsChar123CategoryIdChar125Char123SlugIdChar125Route
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/project'
    | '/posts/$postId'
    | '/posts/{-$categoryId}/{-$slugId}'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/project'
    | '/posts/$postId'
    | '/posts/{-$categoryId}/{-$slugId}'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/project'
    | '/posts/$postId'
    | '/posts/{-$categoryId}/{-$slugId}'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ProjectRoute: typeof ProjectRoute
  PostsPostIdRoute: typeof PostsPostIdRoute
  PostsChar123CategoryIdChar125Char123SlugIdChar125Route: typeof PostsChar123CategoryIdChar125Char123SlugIdChar125Route
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/project': {
      id: '/project'
      path: '/project'
      fullPath: '/project'
      preLoaderRoute: typeof ProjectRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/$postId': {
      id: '/posts/$postId'
      path: '/posts/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof PostsPostIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/{-$categoryId}/{-$slugId}': {
      id: '/posts/{-$categoryId}/{-$slugId}'
      path: '/posts/{-$categoryId}/{-$slugId}'
      fullPath: '/posts/{-$categoryId}/{-$slugId}'
      preLoaderRoute: typeof PostsChar123CategoryIdChar125Char123SlugIdChar125RouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ProjectRoute: ProjectRoute,
  PostsPostIdRoute: PostsPostIdRoute,
  PostsChar123CategoryIdChar125Char123SlugIdChar125Route:
    PostsChar123CategoryIdChar125Char123SlugIdChar125Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
